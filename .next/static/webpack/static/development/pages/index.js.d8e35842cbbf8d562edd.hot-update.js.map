{"version":3,"file":"static/webpack/static/development/pages/index.js.d8e35842cbbf8d562edd.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport Head from '../components/head'\nimport Nav from '../components/nav'\n\nconst Index = ({ users }) => {\n  const [date, setDate] = useState(null)\n\n  useEffect(() => {\n    async function getDate() {\n      const res = await fetch('/api/date')\n      const newDate = await res.json()\n      setDate(newDate)\n    }\n    getDate()\n  }, [])\n\n  return (\n    <div>\n      <Link href='/todos'>\n        <a>Todos Page</a>\n      </Link>\n      <p className='row date'>\n        The date is:&nbsp;{' '}\n        {date ? (\n          <span>\n            <b>{date.date}</b>\n          </span>\n        ) : (\n          <span className='loading'></span>\n        )}\n      </p>\n      <ul>\n        {users &&\n          users.map(user => (\n            <li key={user.id}>\n              <Link href='/user/[id]' as={`/user/${user.id}`}>\n                <a>{`User ${user.id}`}</a>\n              </Link>\n            </li>\n          ))}\n      </ul>\n      <style jsx>{`\n        .hero {\n          width: 100%;\n          color: #333;\n        }\n        .title {\n          margin: 0;\n          width: 100%;\n          padding-top: 80px;\n          line-height: 1.15;\n          font-size: 48px;\n        }\n        .title,\n        .description {\n          text-align: center;\n        }\n        .row {\n          max-width: 880px;\n          margin: 80px auto 40px;\n          display: flex;\n          flex-direction: row;\n          justify-content: space-around;\n        }\n        .date {\n          height: 24px;\n          max-width: calc(100% - 32px)\n          text-align: center;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 16px;\n        }\n        .date p {\n          text-align: center;\n        }\n        .date span {\n          width: 176px;\n          text-align: center;\n        }\n        @keyframes Loading {\n          0%{background-position:0% 50%}\n          50%{background-position:100% 50%}\n          100%{background-position:0% 50%}\n        }\n        .date .loading {\n          max-width: 100%;\n          height: 24px;\n          border-radius: 4px;\n          display: inline-block;\n          background: linear-gradient(270deg, #D1D1D1, #EAEAEA);\n          background-size: 200% 200%;\n          animation: Loading 2s ease infinite;\n        }\n        .card {\n          padding: 18px 18px 24px;\n          width: 220px;\n          text-align: left;\n          text-decoration: none;\n          color: #434343;\n          border: 1px solid #9b9b9b;\n        }\n        .card:hover {\n          border-color: #067df7;\n        }\n        .card h3 {\n          margin: 0;\n          color: #067df7;\n          font-size: 18px;\n        }\n        .card p {\n          margin: 0;\n          padding: 12px 0 0;\n          font-size: 13px;\n          color: #333;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nIndex.getInitialProps = async ({ req }) => {\n  //  const baseUrl = req ? `${req.protocol}://${req.headers.host}` : ''\n  const protocol = req ? req.headers['x-forwarded-proto'] || 'http' : ''\n  const baseUrl = req ? `${protocol}://${req.headers.host}` : ''\n  // const baseUrl = req ? `${req.headers.referer}` : ''\n  const response = await fetch(`${baseUrl + '/api/users'}`)\n  const users = await response.json()\n\n  return { users }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAhBA;AAAA;AAAA;AAsGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}