{"ast":null,"code":"var _jsxFileName = \"/Users/GMS/Dev/next/newnext/pages/user/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { server } from '../../config';\n\nconst User = ({\n  user\n}) => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, user.name);\n\nUser.getInitialProps = async ({\n  query: {\n    id\n  }\n}, req) => {\n  /*   const response = await fetch(`${server}/api/user/${id}`)\n  const user = await response.json()\n  return {\n    user: user,\n  } */\n  const protocol = req ? req.headers['x-forwarded-proto'] || 'http' : '';\n  const baseUrl = req ? `${protocol}://${req.headers.host}` : '';\n  const response = await fetch(`${baseUrl}/api/user/${id}}`);\n  const user = await response.json();\n  return {\n    user\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/GMS/Dev/next/newnext/pages/user/[id].js"],"names":["fetch","server","User","user","name","getInitialProps","query","id","req","protocol","headers","baseUrl","host","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAI,CAACC,IAAX,CAA3B;;AAEAF,IAAI,CAACG,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAP,EAA0BC,GAA1B,KAAkC;AACvD;;;;;AAMA,QAAMC,QAAQ,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,mBAAZ,KAAoC,MAAvC,GAAgD,EAApE;AACA,QAAMC,OAAO,GAAGH,GAAG,GAAI,GAAEC,QAAS,MAAKD,GAAG,CAACE,OAAJ,CAAYE,IAAK,EAArC,GAAyC,EAA5D;AACA,QAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAE,GAAEW,OAAQ,aAAYJ,EAAG,GAA3B,CAA5B;AACA,QAAMJ,IAAI,GAAG,MAAMU,QAAQ,CAACC,IAAT,EAAnB;AAEA,SAAO;AAAEX,IAAAA;AAAF,GAAP;AACD,CAbD;;AAeA,eAAeD,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { server } from '../../config'\n\nconst User = ({ user }) => <div>{user.name}</div>\n\nUser.getInitialProps = async ({ query: { id } }, req) => {\n  /*   const response = await fetch(`${server}/api/user/${id}`)\n  const user = await response.json()\n  return {\n    user: user,\n  } */\n\n  const protocol = req ? req.headers['x-forwarded-proto'] || 'http' : ''\n  const baseUrl = req ? `${protocol}://${req.headers.host}` : ''\n  const response = await fetch(`${baseUrl}/api/user/${id}}`)\n  const user = await response.json()\n\n  return { user }\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}