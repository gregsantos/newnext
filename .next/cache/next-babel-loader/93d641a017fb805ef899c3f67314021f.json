{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/GMS/Dev/next/newnext/pages/user/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { server } from '../../config';\n\nvar User = function User(_ref) {\n  var user = _ref.user;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, user.name);\n};\n\nUser.getInitialProps = function _callee(_ref2) {\n  var req, protocol, baseUrl, response, users;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          protocol = req ? req.headers['x-forwarded-proto'] || 'http' : '';\n          baseUrl = req ? \"\".concat(protocol, \"://\").concat(req.headers.host) : ''; // const baseUrl = req ? `${req.protocol}://${req.headers.host}` : ''\n          // const baseUrl = req ? `${req.headers.referer}` : ''\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(baseUrl + '/api/users')));\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          users = _context.sent;\n          return _context.abrupt(\"return\", {\n            users: users\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default User;\n/*   const response = await fetch(`${server}/api/user/${id}`)\n  const user = await response.json()\n  return {\n    user: user,\n  } */","map":{"version":3,"sources":["/Users/GMS/Dev/next/newnext/pages/user/[id].js"],"names":["fetch","server","User","user","name","getInitialProps","req","protocol","headers","baseUrl","host","response","json","users"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACC,IAAX,CAAd;AAAA,CAAb;;AAEAF,IAAI,CAACG,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AACfC,UAAAA,QADe,GACJD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,mBAAZ,KAAoC,MAAvC,GAAgD,EAD/C;AAEfC,UAAAA,OAFe,GAELH,GAAG,aAAMC,QAAN,gBAAoBD,GAAG,CAACE,OAAJ,CAAYE,IAAhC,IAAyC,EAFvC,EAGrB;AACA;;AAJqB;AAAA,2CAKEV,KAAK,WAAIS,OAAO,GAAG,YAAd,EALP;;AAAA;AAKfE,UAAAA,QALe;AAAA;AAAA,2CAMDA,QAAQ,CAACC,IAAT,EANC;;AAAA;AAMfC,UAAAA,KANe;AAAA,2CAQd;AAAEA,YAAAA,KAAK,EAALA;AAAF,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeX,IAAf;AAEA","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { server } from '../../config'\n\nconst User = ({ user }) => <div>{user.name}</div>\n\nUser.getInitialProps = async ({ req }) => {\n  const protocol = req ? req.headers['x-forwarded-proto'] || 'http' : ''\n  const baseUrl = req ? `${protocol}://${req.headers.host}` : ''\n  // const baseUrl = req ? `${req.protocol}://${req.headers.host}` : ''\n  // const baseUrl = req ? `${req.headers.referer}` : ''\n  const response = await fetch(`${baseUrl + '/api/users'}`)\n  const users = await response.json()\n\n  return { users }\n}\n\nexport default User\n\n/*   const response = await fetch(`${server}/api/user/${id}`)\n  const user = await response.json()\n  return {\n    user: user,\n  } */\n"]},"metadata":{},"sourceType":"module"}